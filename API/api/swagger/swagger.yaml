swagger: "2.0"
info:
  version: "0.0.1"
  title: Sears Hack App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/html
x-a127-config: {}
x-a127-services: {}
paths:
  # /hello:
  #   # binds a127 app logic to a route
  #   x-swagger-router-controller: hello_world
  #   x-a127-apply: {}
  #   get:
  #     description: Returns 'Hello' to the caller
  #     # used as the method/function name of the controller
  #     operationId: hello
  #     parameters:
  #       - name: name
  #         in: query
  #         description: The name of the person to whom to say hello
  #         required: false
  #         type: string
  #     responses:
  #       "200":
  #         description: Success
  #         schema:
  #           # a pointer to a definition
  #           $ref: "#/definitions/HelloWorldResponse"
  #       # responses may fall through to errors
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"

  # /hotels:
  #   # binds a127 app logic to a route
  #   x-swagger-router-controller: hotels
  #   x-a127-apply: {}    
  #   get:
  #     description: Returns a list of nearby hotels
  #     # used as the method name of the controller
  #     operationId: getHotels
  #     parameters:
  #       - name: location
  #         in: query
  #         type: string
  #     responses:
  #       "200":
  #         description: Success
  #         schema:
  #           # a pointer to a definition
  #           $ref: "#/definitions/HelloWorldResponse"
  #       # responses may fall through to errors
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  
  # /restaurants:
  #   # binds a127 app logic to a route
  #   x-swagger-router-controller: restaurants
  #   x-a127-apply: {}    
  #   get:
  #     description: Returns a list of nearby places to eat
  #     # used as the method name of the controller
  #     operationId: getRestaurants
  #     # parameters:
  #     #   - name: latlong
  #     #     in: query
  #     #     type: string
  #     responses:
  #       "200":
  #         description: Success
  #         schema:
  #           # a pointer to a definition
  #           $ref: "#/definitions/HelloWorldResponse"
  #       # responses may fall through to errors
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  
  # # {} = variable
  # /restaurants/{id}/reviews:
  #   # binds a127 app logic to a route
  #   x-swagger-router-controller: restaurants
  #   x-a127-apply: {}
  #   get:
  #     description: Returns a list of reviews for a specific restaurant
  #     # used as the method name of the controller
  #     operationId: getReviews
  #     parameters:
  #       - name: id
  #         in: path
  #         description: The restID of the restaurant
  #         required: true
  #         type: number
  #     responses:
  #       "200":
  #         description: Success
  #         schema: {}
  #         #   # a pointer to a definition
  #         #   $ref: "#/definitions/Entity"
  #       # responses may fall through to errors
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  
  # /reviews:
  #   x-swagger-router-controller: reviews
  #   x-volos-authorizations: {}
  #   x-volos-apply: {}
  #   post:
  #     x-volos-apply: {}
  #     description: Posts a new review
  #     operationId: postReview
  #     parameters:
  #       - name: body
  #         in: body
  #         description: Post review and rating
  #         required: true
  #         schema:
  #           properties:
  #             title:
  #               type: string
  #             restID:
  #               type: integer
  #             rating:
  #               type: integer
  #             reviewer:
  #               type: string
  #             body:
  #               type: string
  #           required: ["title", "body", "rating"]
  #     responses:
  #       "200":
  #         description: Success
  #         schema: {}
  #       default:
  #         description: Error
  #         schema: {}
  /login:
    # binds a127 app logic to a route
    x-swagger-router-controller: login
    x-a127-apply: {}
    get:
      description: Returns a user to the caller
      # used as the method/function name of the controller
      operationId: getLogin
      parameters:
        - name: username
          in: query
          description: user account username
          required: true
          type: string
        - name: password
          in: query
          description: user account password
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /users/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: users
    x-a127-apply: {}
    get:
      description: Returns a user to the caller
      # used as the method/function name of the controller
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: user account id
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /users/{id}/list:
    # binds a127 app logic to a route
    x-swagger-router-controller: users
    x-a127-apply: {}
    get:
      description: Returns a list of users registry lists to the caller
      # used as the method/function name of the controller
      operationId: getUserList
      parameters:
        - name: id
          in: path
          description: user account id
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /lists/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: lists
    x-a127-apply: {}
    get:
      description: Returns a registry 'list' to the caller
      # used as the method/function name of the controller
      operationId: getList
      parameters:
        - name: id
          in: path
          description: list id
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /deals:
    # binds a127 app logic to a route
    x-swagger-router-controller: deals
    x-a127-apply: {}
    get:
      description: Returns 'deals' of a catergory to the caller
      # used as the method/function name of the controller
      operationId: getDealsofCategory
      parameters:
        - name: store
          in: query
          description: Sears or Kmart. Defaults to Sears
          required: false
          type: string
        - name: category
          in: query
          description: The specific catergory to target
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products:
    # binds a127 app logic to a route
    x-swagger-router-controller: products
    x-a127-apply: {}
    get:
      description: Returns list of 'products' to the caller
      # used as the method/function name of the controller
      operationId: getProducts
      parameters:
        - name: keyword
          in: query
          description: The specific keyword to search
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /products/{partnum}:
    # binds a127 app logic to a route
    x-swagger-router-controller: products
    x-a127-apply: {}
    get:
      description: Returns a specific 'product' to the caller
      # used as the method/function name of the controller
      operationId: getProduct
      parameters:
        - name: partnum
          in: path
          description: The product id
          required: true
          type: string
        - name: store
          in: query
          description: Sears or Kmart. Defaults to Sears
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
